opener = urllib.build_opener(urllib.HTTPCookieProcessor(cj))
page = opener.open("http://"+ip+"/captcha/example5/")
page.addheaders = [('User-agent', 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:53.0) Gecko/20100101 Firefox/53.0')]
reddit = etree.HTML(page.read())

for img in reddit.xpath('//img/@src'):
    print (img)
a = str(img)
resource = urllib.urlopen('http://'+ip+'/captcha/example5/' + a)
output = open("capt.png","wb")
output.write(resource.read())
output.close()

#obtener el hash md5 de cada imagen
import hashlib
 
hasher = hashlib.md5()
with open('capt.png', 'rb') as afile:
    buf = afile.read()
    hasher.update(buf)
md5 = (hasher.hexdigest())
md5= str(md5) 
print (md5)


# comprobar si el md5 es igual al de la lista creada

if md5 == "FE9AC5CFB7B2438C900ED3E56C0E2CB0" : 
    print ("0dayz")
elif md5 == "4c298cfa40e502fb644d9a5fdc9c6a11": 
    print ("vulnerability")
elif md5 == "3761dd5bdb3dae4fc7ba3d5652b7bfc0": 
    print ("security")
elif md5 == "4039a3ef7fc79e4adb60b43ac108d648": 
    print ("admin")
elif md5== "93c985c35fa28eb819d91b5f55be7b65": 
    print ("compromise")
elif md5== "3d0a2ab11fb9c59d19a9d95d56ea2e6d": 
    print ("hacker")
elif md5 == "539746c4b3beae3e77773fa940d83d78": 
    print ("petester")
elif md5 == "fe9ac5cfb7b2438c900ed3e56c0e2cb0" :
    print ("0dayz")
else:     
    print ("END")
